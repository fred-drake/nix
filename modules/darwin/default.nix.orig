# This file contains common settings and configurations that apply to all
# macOS devices in the system. It includes:
#   - Environment setup (shells, packages, system paths)
#   - Font configurations
#   - Homebrew package management
#   - Nix configuration
#   - System programs and services
#   - Security settings
#
# Individual device-specific configurations should be placed in separate files.
{ pkgs, ... }: {
  # Environment configuration
  environment = {
    loginShell = pkgs.zsh; # Set zsh as the login shell
    shells = with pkgs; [ bash zsh fish ]; # Available shells
    systemPackages = [ pkgs.coreutils ]; # Core utilities package
    systemPath =
      [ "/opt/homebrew/bin" "/opt/homebrew/sbin" ]; # Add Homebrew paths
    pathsToLink = [ "/Applications" ]; # Link Applications directory
  };

  # Font configuration
  fonts.packages = [
    (pkgs.nerdfonts.override { fonts = [ "Hack" "JetBrainsMono" "Meslo" ]; })
  ];

  # Homebrew configuration
  homebrew = {
    enable = true;
    caskArgs.no_quarantine = true; # Disable quarantine for casks
    global.brewfile = true; # Use a global Brewfile
    masApps = {
      # Mac App Store applications
      "Bitwarden" = 1352778147;
      "Microsoft Remote Desktop" = 1295203466;
      "OneDrive" = 823766827;
      "Pages" = 409201541;
      "RunCat" = 1429033973;
      "The Unarchiver" = 425424353;
      "Unsplash Wallpapers" = 1284863847;
      "UTM Virtual Machines" = 1538878817;
      "Xcode" = 497799835;
      "WireGuard" = 1451685025;
    };
    casks = [
      # Homebrew casks (GUI applications)
      # Using zed in homebrew because nix pkg is currently broken for Darwin
<<<<<<< HEAD
      "balenaetcher"
      "brave-browser"
      "cursor"
      "daisydisk"
      "docker"
      "finicky"
      "fork"
      "godot-mono"
      "google-drive"
      "krita"
      "maestral"
      "obs"
      "obsidian"
      "ollama"
      "raycast"
      "sourcetree"
      "steam"
      "ultimaker-cura"
      "vlc"
      "wine-stable"
      "winbox"
      "zed"
=======
      "balenaetcher" "bartender" "brave-browser" "cursor" "daisydisk" "docker" "finicky" "fork" "godot-mono" "google-drive"
      "krita" "maestral" "obs" "obsidian" "ollama" "raycast" "rider"
      "sourcetree" "steam" "ultimaker-cura" "vlc" "wine-stable" "winbox" "zed"
>>>>>>> 671998b (Added rider)
    ];
    taps = [ "fred-drake/tap" ]; # Additional Homebrew taps
    brews = [ "watch" "rubyfmt" ]; # Homebrew formulae
  };

  # Nix configuration
  nix = {
    extraOptions = ''
      experimental-features = nix-command flakes
    '';
    gc = {
      automatic = true; # Enable automatic garbage collection
      interval = [{
        Hour = 4;
        Minute = 30;
        Weekday = 2;
      }]; # Garbage collect every Tuesday at 4:30 AM
      options = "--delete-older-than 7d"; # Delete old garbage
    };
    settings = {
      auto-optimise-store = true; # Optimize the Nix store
      cores = 0; # Set Nix to use all available cores
      sandbox = false;
    };
  };
  # Program configurations
  programs = {
    direnv.enable = true; # Enable direnv for directory-specific environments
    zsh.enable = true; # Enable Zsh
  };

  # Security configuration
  security.pam.enableSudoTouchIdAuth = true; # Enable Touch ID for sudo

  # Enable Nix daemon service
  services.nix-daemon.enable = true;

  # System configuration
  system = {
    # Activation script to install Rosetta 2 for x86 app compatibility
    activationScripts.extraActivation.text = ''
      softwareupdate --install-rosetta --agree-to-license
    '';
    # System defaults
    defaults = {
      dock.autohide = true; # Auto-hide the Dock
      finder = {
        AppleShowAllExtensions = true;
        AppleShowAllFiles = true;
        CreateDesktop = false;
        FXPreferredViewStyle = "Nlsv";
        _FXShowPosixPathInTitle = true;
        QuitMenuItem = true;
        ShowPathbar = true;
        ShowStatusBar = true;
      };
      trackpad.Clicking = true; # Enable tap to click
      menuExtraClock.ShowSeconds = true; # Show seconds in menu bar clock
      NSGlobalDomain = {
        AppleShowAllExtensions = true;
        InitialKeyRepeat = 14;
        KeyRepeat = 1;
        NSAutomaticCapitalizationEnabled = false;
        NSAutomaticSpellingCorrectionEnabled = false;
        "com.apple.mouse.tapBehavior" = 1;
      };
      SoftwareUpdate.AutomaticallyInstallMacOSUpdates =
        true; # Auto-install macOS updates
      WindowManager.StandardHideDesktopIcons = true; # Hide desktop icons
    };
    stateVersion = 4; # System state version
  };

  # User configuration
  users = {
    knownUsers = [ "fdrake" ]; # Known users
    users.fdrake = {
      uid = 501;
      home = "/Users/fdrake";
      shell = pkgs.zsh; # Set zsh as the user's shell
    };
  };
}
